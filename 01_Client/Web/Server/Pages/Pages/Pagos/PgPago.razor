@page "/administrar/pagos"
@using Infraestructura.Models.Pagos;
@using Microsoft.AspNetCore.Components
@using Syncfusion.Blazor.Grids
@using System.Globalization
@using MudBlazor
@using Syncfusion.Blazor.Buttons
@inherits MainBaseComponent
@layout MainLayout
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@inject ISnackbar _Snackbar



<MudTabs Elevation="2" Rounded="true" Centered="true" Class="my-6" Color="Color.Dark">
    <MudTabPanel Icon="@Icons.Material.Filled.PendingActions" Text="Pendientes">
    <MudCard>
    <MudDivider />
    <MudText Typo="Typo.h6" Align="Align.Center" Color="Color.Primary">
        <b>LISTA DE PAGOS PENDIENTES</b>
    </MudText>
    <MudDivider />
    <MudTextField @bind-Value="searchClientName"
                  Placeholder="Buscar por nombre de cliente..."
                  Adornment="Adornment.Start"
                  AdornmentIcon="@Icons.Material.Filled.Search"
                  Margin="Margin.Dense"
                  Class="mb-4" />

    <MudTable Items="@_pagos" Filterable="true"
              Filter="@(pago => string.IsNullOrWhiteSpace(searchClientName)
                           || pago.PgCliente?.Nombre?.ToLower().Contains(searchClientName.ToLower()) == true)"
              Sortable="true" Bordered="true" Hover="true" Dense="true"
              RowsPerPage="25" RowsPerPageOptions="new int[]{10,25,50,100}">
        <HeaderContent>
            <MudTh style="width:5%; max-width:60px;">
                <MudTableSortLabel SortBy="new Func<PgPagoDto, object>(x => x.IdpgPago)">
                    COD.
                </MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<PgPagoDto, object>(x => x.PgCliente.Nombre)">
                    NOMBRE CLIENTE
                </MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<PgPagoDto, object>(x => x.MesPago)">
                    MES PAGO
                </MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<PgPagoDto, object>(x => x.FechaPago)">
                    FECHA PAGO
                </MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<PgPagoDto, object>(x => x.Monto)">
                    MONTO
                </MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<PgPagoDto, object>(x => x.EstadoPago)">
                    ESTADO
                </MudTableSortLabel>
            </MudTh>
            <MudTh>Opciones</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd><MudText Typo="Typo.caption">@context.IdpgPago</MudText></MudTd>
            <MudTd><MudText Typo="Typo.caption">@context.PgCliente?.Nombre</MudText></MudTd>
            <MudTd>
                <MudText Typo="Typo.caption">
                    @(context.MesPago.HasValue
                        ? context.MesPago.Value.ToString("dd/MM/yyyy - MMMM", new System.Globalization.CultureInfo("es-ES"))
                        : "-")
                </MudText>
            </MudTd>

            <MudTd>
                <MudText Typo="Typo.caption">
                    @(context.FechaPago.HasValue ? context.FechaPago.Value.ToString("dd/MM/yyyy") : "-")
                </MudText>
            </MudTd>
            <MudTd><MudText Typo="Typo.caption">@context.Monto</MudText></MudTd>
            <MudTd><MudText Typo="Typo.caption">@context.EstadoPago</MudText></MudTd>           
            <MudTd>
                @if (context.EstadoPago == "Pendiente")
                {
                    <MudTooltip Text="CAMBIAR A PAGADO" Placement="Placement.Top">
                        <MudIconButton Icon="@Icons.Material.Filled.CheckCircle"
                                       OnClick="@(() => CambiarEstadoPago(context))"
                                       Variant="Variant.Outlined" Color="Color.Info" Size="Size.Small" />
                    </MudTooltip>

                    <MudTooltip Text="IMPRIMIR" Color="Color.Primary" Placement="Placement.Top">
                        <MudIconButton Color="Color.Primary" Variant="Variant.Filled" Icon="@Icons.Material.Filled.Print" Size="Size.Small"
                                       OnClick="@(() => repjasper(context.IdpgCliente))" />
                    </MudTooltip>
                }
                <MudTooltip Text="EDITAR REGISTRO" Placement="Placement.Top">
                    <MudIconButton Icon="@Icons.Material.Filled.Edit" OnClick="@(() => FormEditarPago(context))"
                                   Variant="Variant.Outlined" Color="Color.Warning" Size="Size.Small" />
                </MudTooltip>
            </MudTd>

        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>
</MudCard>
</MudTabPanel>

<MudTabPanel Icon="@Icons.Material.Filled.CheckCircle" Text="Pagados">
    <MudCard>
        <MudText Typo="Typo.h6" Align="Align.Center" Color="Color.Success">
            <b>LISTA DE PAGOS REALIZADOS</b>
        </MudText>
            <MudDivider />
            <MudTextField @bind-Value="searchClientpago"
                          Placeholder="Buscar por nombre de cliente..."
                          Adornment="Adornment.Start"
                          AdornmentIcon="@Icons.Material.Filled.Search"
                          Margin="Margin.Dense"
                          Class="mb-4" />
            <MudTable Items="@_pagado" Filterable="true"
                      Filter="@(pago => string.IsNullOrWhiteSpace(searchClientpago)
                                                                       || pago.PgCliente?.Nombre?.ToLower().Contains(searchClientpago.ToLower()) == true)"
                      Sortable="true" Bordered="true" Hover="true" Dense="true"
                      RowsPerPage="25" RowsPerPageOptions="new int[]{10,25,50,100}">
                <HeaderContent>
                    <MudTh style="width:5%; max-width:60px;">
                        <MudTableSortLabel SortBy="new Func<PgPagoDto, object>(x => x.IdpgPago)">
                            COD.
                        </MudTableSortLabel>
                    </MudTh>
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<PgPagoDto, object>(x => x.PgCliente.Nombre)">
                            NOMBRE CLIENTE
                        </MudTableSortLabel>
                    </MudTh>
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<PgPagoDto, object>(x => x.MesPago)">
                            MES PAGO
                        </MudTableSortLabel>
                    </MudTh>
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<PgPagoDto, object>(x => x.FechaPago)">
                            FECHA PAGO
                        </MudTableSortLabel>
                    </MudTh>
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<PgPagoDto, object>(x => x.Monto)">
                            MONTO
                        </MudTableSortLabel>
                    </MudTh>
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<PgPagoDto, object>(x => x.EstadoPago)">
                            ESTADO
                        </MudTableSortLabel>
                    </MudTh>
                    <MudTh>Opciones</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd><MudText Typo="Typo.caption">@context.IdpgPago</MudText></MudTd>
                    <MudTd><MudText Typo="Typo.caption">@context.PgCliente?.Nombre</MudText></MudTd>
                    <MudTd>
                        <MudText Typo="Typo.caption">
                            @(context.MesPago.HasValue
                                                        ? context.MesPago.Value.ToString("dd/MM/yyyy - MMMM", new System.Globalization.CultureInfo("es-ES"))
                                                        : "-")
                        </MudText>
                    </MudTd>

                    <MudTd>
                        <MudText Typo="Typo.caption">
                            @(context.FechaPago.HasValue? context.FechaPago.Value.ToString("dd/MM/yyyy") : "-")
                        </MudText>
                    </MudTd>
                    <MudTd><MudText Typo="Typo.caption">@context.Monto</MudText></MudTd>
                    <MudTd><MudText Typo="Typo.caption">@context.EstadoPago</MudText></MudTd>
                    <MudTd><MudText Typo="Typo.caption">@context.Tipopago</MudText></MudTd>
                    

                </RowTemplate>
                <PagerContent>
                    <MudTablePager />
                </PagerContent>
            </MudTable>
    </MudCard>
</MudTabPanel>
</MudTabs>
@code {
   


    public async Task repjasper(int idingreso)
    {
        await JSRuntime.InvokeVoidAsync("CargaReportePop",
        new
        {
            ruta = "/Reports/ISPPAGOS/pago_pendiente",
            idusuario = idingreso 
        });
    }

}